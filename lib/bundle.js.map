{"version":3,"sources":["webpack:///webpack/bootstrap 5f9e83d06b6d37949df6","webpack:///./lib/root.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;AAGA;AACA;AACA;AACA;;AAEA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH,EAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,kBAAkB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;;AAEA;;AAEA,kBAAiB,uBAAuB;AACxC;AACA,gCAA+B,UAAU;;AAEzC;AACA;AACA;;AAEA;AACA,cAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,4BAA4B;AACnD;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB;AACnB;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,kBAAkB;AAC3C,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;;AAEA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qDAAoD,kCAAkC;;AAEtF,yCAAwC,aAAa;;AAErD;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,iBAAgB;AAChB,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA,qBAAoB,qBAAqB;;;AAGzC,IAAG;AACH;;AAEA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,OAAM;AACN;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,kBAAkB;AAC3C;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA,gBAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5f9e83d06b6d37949df6\n **/","var DIMENSION = 4;\nvar DIRECTION_MAP = {\n  \"left\": -1,\n  \"up\": -DIMENSION,\n  \"right\": 1,\n  \"down\": DIMENSION\n};\nvar DIFFICULTY = 24;\nvar REVEAL_ALL = false;\nvar SHOW_NUMBERS = true;\n\nvar IMAGES = [\n  \"cutpiece.jpg\", \"flag.jpg\", \"tv.gif\", \"city.gif\",\n  \"horse.gif\", \"turning.gif\", \"ruins.gif\", \"squarecircle.gif\",\n  \"darwin.gif\", \"polygons.gif\"\n]; // would be nice to have a function to access assets/images folder here\nvar ALREADY_SEEN = [];\nvar IMAGE_PATH;\n\nvar chooseImage = function() {\n  var availableImages = [];\n  // debugger;\n  if (ALREADY_SEEN.length === 0) {\n    availableImages = IMAGES;\n  } else if (ALREADY_SEEN.length === IMAGES.length) {\n    ALREADY_SEEN = [];\n    availableImages = IMAGES;\n  } else {\n    IMAGES.forEach(function(image) {\n      // debugger;\n      if (ALREADY_SEEN.indexOf(image) === -1) {\n        availableImages.push(image);\n      }\n    })\n  }\n\n\n  var chosenIdx = Math.floor(Math.random() * availableImages.length);\n  var imageToUse = availableImages[chosenIdx];\n  ALREADY_SEEN.push(imageToUse);\n  IMAGE_PATH = \"assets/images/\" + imageToUse;\n\n}\n\n\n\nchooseImage();\n\n$(function() {\n  setBoardWidth();\n  addTiles(boardWidth);\n  checkTiles();\n  showButtons();\n  addButtonHandlers();\n  addClickHandlers();\n  // addDoubleClickHandlers();\n  addKeyListeners();\n  addReplayHandler();\n\n});\n\n$(window).resize(function() {\n  setBoardWidth();\n  tileWidth = boardWidth / DIMENSION;\n  $(\".tile\").each(function(_, tile) {\n    var pos = $(tile).attr(\"pos\")\n    var row = Math.floor(pos / DIMENSION);\n    var col = pos % DIMENSION;\n    $(tile).css(\"width\", tileWidth)\n    .css(\"height\", tileWidth)\n    .css(\"top\", row * tileWidth + \"px\")\n    .css(\"left\", col * tileWidth + \"px\")\n    .css(\"line-height\", tileWidth + \"px\");\n\n    attachImage($(tile), $(tile).attr(\"id\"), tileWidth);\n  })\n});\n\n\nvar setBoardWidth = function() {\n  var windowWidth = $(window).width();\n  var windowHeight = $(window).height();\n  boardWidth = .70 * (\n    (windowWidth > windowHeight) ? windowHeight: windowWidth\n  )\n  if (boardWidth < 300) { boardWidth = 300; }\n  $(\"#board\").width(boardWidth).height(boardWidth).show();\n  $(\"#board\").css(\"font-size\", boardWidth / (DIMENSION * 2.5));\n}\n\nvar addTiles = function(boardWidth) {\n  var num_tiles = DIMENSION * DIMENSION - 1\n  var tileIds = [];\n  for(var i = 0; i < (num_tiles); i++) {\n    tileIds.push(i);\n  }\n\n  var boardState = createWinnableGame(DIFFICULTY);\n\n  for (var i = 0; i < boardState.length; i++) {\n    var tileInfo = boardState[i]\n    if (tileInfo === \"empty\") { continue; }\n\n    var row = Math.floor(i / DIMENSION);\n    var col = i % DIMENSION;\n    tileWidth = boardWidth / DIMENSION;\n\n    var newTile = $(\"<div class='tile'>\")\n      .attr({\"id\": tileInfo, \"pos\": i})\n      .css(\"width\", tileWidth)\n      .css(\"height\", tileWidth)\n      .css(\"top\", row * tileWidth + \"px\")\n      .css(\"left\", col * tileWidth + \"px\")\n      .css(\"line-height\", tileWidth + \"px\");\n\n    if (SHOW_NUMBERS) { newTile.html(tileInfo + 1); }\n    attachImage(newTile, tileInfo, tileWidth);\n\n    $(\"#board\").append(newTile);\n\n  }\n}\n\nvar attachImage = function($tile, tileNum, tileWidth) {\n  var row = Math.floor(tileNum / DIMENSION);\n  var col = tileNum % DIMENSION;\n  leftOffset = -(col * tileWidth) + \"px\"\n  topOffset = -(row * tileWidth) + \"px\"\n  $tile.css(\"background-size\", tileWidth * DIMENSION + \"px \" + tileWidth * DIMENSION + \"px\")\n    .css(\"background-position\", leftOffset + \" \" + topOffset )\n\n  if (REVEAL_ALL) { turnOn($tile, IMAGE_PATH)}\n}\n\nvar showButtons = function() {\n  setTimeout(function() {\n    $(\"#settings\").show();\n  }, 50);\n}\n\nvar addButtonHandlers = function() {\n  $(\"#reveal-all\").click(function() {\n    if(REVEAL_ALL) {\n      $(\".tile\").each(function(_, tile) {\n        var id = $(tile).attr(\"id\")\n        var pos = $(tile).attr(\"pos\")\n        if (id !== pos) { turnOff($(tile)); }\n      });\n      REVEAL_ALL = false;\n    } else {\n      $(\".tile\").each(function(_, tile) {\n        turnOn($(tile), IMAGE_PATH);\n      })\n      REVEAL_ALL = true;\n    }\n  });\n\n  $(\"#show-numbers-toggle\").click(function() {\n    SHOW_NUMBERS ? hideNumbers() : showNumbers();\n  });\n\n  $(\"#dimension\").change(function() {\n\n\n    DIMENSION = parseInt($(\"#dimension\").val());\n    DIRECTION_MAP = {\n      \"left\": -1,\n      \"up\": -DIMENSION,\n      \"right\": 1,\n      \"down\": DIMENSION\n    };\n\n    $(\"#difficulty\").attr(\"max\", Math.pow(DIMENSION, 2.5));\n  })\n\n  $(\"#difficulty\").change(function() {\n    DIFFICULTY = parseInt($(\"#difficulty\").val());\n\n  })\n\n  $(\"#image-path\").change(function() {\n    IMAGE_PATH = $(\"#image-path\").val();\n  })\n\n  function shuffleLetters() {\n    function shuffle(array) {\n      var rand, index = -1,\n        length = array.length,\n        result = Array(length);\n      while (++index < length) {\n        rand = Math.floor(Math.random() * (index + 1));\n        result[index] = result[rand];\n        result[rand] = array[index];\n      }\n      return result;\n    }\n    var letters = $(\"#reshuffle\").html();\n    $(\"#reshuffle\").html(shuffle(letters));\n  }\n\n  $(\"#reshuffle\").hover(shuffleLetters, function() {$(\"#reshuffle\").html(\"RESHUFFLE\")})\n\n  $(\"#reshuffle\").mousedown(function() {return false})\n\n  $(\"#reshuffle\").click(function() {\n    $(\".tile\").remove();\n    setBoardWidth();\n    addTiles(boardWidth);\n    checkTiles();\n  })\n}\n\n\n\nvar hideNumbers = function() {\n  $(\".tile\").empty();\n  SHOW_NUMBERS = false;\n}\n\nvar showNumbers = function() {\n  $(\".tile\").each(function(_, tile) {\n    var id = parseInt($(tile).attr(\"id\")) + 1\n    $(tile).html(id)\n  })\n  SHOW_NUMBERS = true;\n}\n\n\nvar addClickHandlers = function() {\n  var startPos, endPos;\n\n  $(\"#board\").on(\"mousedown\", \".tile\", function(event) {\n    event.preventDefault();\n    var clickedId = $(this).attr(\"id\")\n    $(\".tile\").each(function(tile) {\n      $(\"#\" + tile).removeClass(\"selected\")\n    });\n    $(this).addClass(\"selected\")\n    startPos = {x: event.pageX, y: event.pageY}\n  })\n\n  $(window).mousedown(function(event) {\n    if ($(event.target).attr(\"id\") == undefined) {\n      $(\".tile\").removeClass(\"selected\");\n    }\n  })\n\n  $(\"#board\").on(\"mousemove\", \".selected\", function(event) {\n    event.preventDefault();\n  })\n\n  $(window).on(\"mouseup\", function(event) {\n    endPos = {x: event.pageX, y: event.pageY}\n    var direction;\n    if (startPos) {\n      direction = getDirection(startPos, endPos);\n      startPos = undefined;\n    }\n    if (direction) { moveTile(direction); }\n\n\n  })\n}\n\nvar getDirection = function(startPos, endPos) {\n  var xChange = endPos.x - startPos.x;\n  var yChange = endPos.y - startPos.y;\n\n  if (xChange == 0 && yChange == 0) { return }\n\n  if (Math.abs(xChange) > Math.abs(yChange)) {\n    if(xChange > 0) {\n      return \"right\"\n    } else {\n      return \"left\"\n    }\n  } else {\n    if (yChange > 0) {\n      return \"down\"\n    } else {\n      return \"up\"\n    }\n  }\n}\n\n// var addDoubleClickHandlers = function() {\n//   $(\"#board\").on(\"dblclick\", \".tile\", function() {\n//     if ($(this).hasClass(\"on\")) {\n//       $(this).removeClass(\"on\")\n//     } else {\n//       $(this).addClass(\"on\")\n//     }\n//   })\n// }\n\n\nvar addKeyListeners = function() {\n  $(window).keydown(function() {\n    if ($(\".selected\").length > 0) {\n      var code = event.keyCode\n      switch (code) {\n        case 37:\n          event.preventDefault();\n          moveTile(\"left\");\n          break;\n        case 38:\n          event.preventDefault();\n          moveTile(\"up\");\n          break;\n        case 39:\n          event.preventDefault();\n          moveTile(\"right\");\n          break;\n        case 40:\n          event.preventDefault();\n          moveTile(\"down\");\n          break;\n      }\n    }\n  });\n}\n\nvar moveTile = function(direction) {\n  var currentPos = parseInt( $(\".selected\").attr(\"pos\") );\n  var movPos = currentPos + DIRECTION_MAP[direction]\n  var distances = calculateDistances(direction)\n\n  if (spaceIsOpen(movPos) && notFallingOverEdge(currentPos, direction)) {\n    $(\".selected\").attr(\"pos\", movPos);\n    $(\".selected\").animate(distances, 250 );\n    checkTiles();\n\n  } else {\n    $(\".selected\").addClass(\"wiggle\")\n    setTimeout(function() {\n      $(\".tile\").removeClass(\"wiggle\")\n    }, 300)\n  }\n}\n\nvar notFallingOverEdge = function(currentPos, direction) {\n  if ((currentPos % DIMENSION === 0 && direction === \"left\") ||\n     (currentPos % DIMENSION === (DIMENSION - 1) && direction === \"right\")) {\n     return false;\n  } else {\n     return true;\n  }\n}\n\nvar spaceIsOpen = function(posToTest) {\n  var validity;\n  if (posToTest >= 0 && posToTest < DIMENSION * DIMENSION) {\n    validity = true;\n    $(\".tile\").each(function(_, tile) {\n      if ($(tile).attr(\"pos\") == posToTest) {\n        validity = false;\n      }\n    });\n  }\n  return validity;\n}\n\nvar calculateDistances = function(direction) {\n  var distances;\n  var width = tileWidth + \"px\"\n  switch (direction) {\n    case \"left\":\n      distances = {\"left\": \"-=\" + width}\n      break;\n    case \"up\":\n      distances = {\"top\": \"-=\" + width}\n      break;\n      break;\n    case \"right\":\n      distances = {\"left\": \"+=\" + width}\n      break;\n      break;\n    case \"down\":\n      distances = {\"top\": \"+=\" + width}\n      break;\n      break;\n  }\n  return distances\n}\n\n\nvar turnOn = function($tile, imagePath) {\n  $tile\n    .css(\"background-image\", \"url(\" + imagePath + \")\")\n    .addClass(\"on\");\n}\n\nvar turnOff = function($tile) {\n  $tile\n    .removeClass(\"on\")\n    .css(\"background-image\", \"none\");\n}\n\nvar checkTiles = function() {\n  var gameOver = true;\n  $(\".tile\").each(function(_, tile) {\n    var id = $(tile).attr(\"id\")\n    var pos = $(tile).attr(\"pos\")\n    if (id !== pos) {\n      if (! REVEAL_ALL) { turnOff($(tile)); }\n      gameOver = false;\n    } else {\n      // $(tile).addClass(\"on\");\n      turnOn($(tile), IMAGE_PATH);\n    }\n  });\n\n  if (gameOver) {\n    $(\"#board\").unbind();\n    $(\"#board\").mousedown(function(event){\n      event.preventDefault();\n    });\n    $(\".selected\").removeClass(\"selected\")\n    $(\"#show-numbers-toggle, #reshuffle, #reveal-all\").off(\"click\");\n    // $(\"#dimension, #difficulty\").off(\"change\");\n    showNumbers();\n    doSomethingFancy(0);\n\n    toggleSettings();\n  }\n}\n\nvar addReplayHandler = function() {\n  $(\"#play-again\").click(function(event) {\n    event.preventDefault();\n    chooseImage();\n\n    toggleSettings();\n    $(\".tile\").remove();\n    setBoardWidth();\n    addTiles(boardWidth);\n    checkTiles();\n    addButtonHandlers();\n    addClickHandlers();\n\n  })\n}\n\nvar toggleSettings = function() {\n  $( \"#settings\" ).toggle();\n  $( \"#win-settings\" ).toggle();\n\n}\n\nvar doSomethingFancy = function(i) {\n  var tiles = $(\".tile\")\n  setTimeout(function() {\n    $(tiles[i]).addClass(\"over\");\n    i++;\n    if (i < tiles.length) {\n      doSomethingFancy(i);\n    }\n  }, 50)\n}\n\n// COMPUTER PLAYS BACKWARDS FROM SOLVED STATE\n\nvar createWinnableGame = function(movesFromWinning) {\n  var num_tiles = (DIMENSION * DIMENSION) - 1;\n  var boardState = []\n  for (var i = 0; i < num_tiles; i++) {\n    boardState.push(i)\n  }\n  boardState.push(\"empty\")\n  var lastMoved;\n\n  var makeOneMove = function() {\n    var emptyIdx = boardState.indexOf(\"empty\");\n    var whoCanMove = findAvailableMovers(emptyIdx);\n    var chosenMover = chooseMover(whoCanMove);\n    swapAndHoldLast(chosenMover, emptyIdx);\n  }\n\n  var swapAndHoldLast = function(moverIdx, emptyIdx) {\n    lastMoved = boardState[moverIdx];\n    boardState[emptyIdx] = boardState[moverIdx];\n    boardState[moverIdx] = \"empty\";\n  }\n\n  var findAvailableMovers = function(emptyIdx) {\n    var corner = isCornered(emptyIdx);\n    if (corner) { return getIndexOfMovers(emptyIdx, corner) }\n    var side = isOnSide(emptyIdx);\n    if (side) { return getIndexOfMovers(emptyIdx, side) }\n    return getIndexOfMovers(emptyIdx, [\"left\", \"up\", \"down\", \"right\"]);\n  }\n\n  var chooseMover = function(whoCanMove) {\n    if (lastMoved !== undefined) {\n      var lastMovedIdx = boardState.indexOf(lastMoved);\n      var i = whoCanMove.indexOf(lastMovedIdx);\n      whoCanMove.splice(i, 1);\n    }\n    var j = Math.floor(Math.random() * whoCanMove.length);\n    var chosenMover = whoCanMove[j];\n    return chosenMover;\n  }\n\n  var getIndexOfMovers = function(emptyIdx, directionArray) {\n    return directionArray.map(function(direction) {\n      return emptyIdx + DIRECTION_MAP[direction]\n    })\n  }\n\n  var isCornered = function(emptyIdx) {\n    if (emptyIdx === 0) {\n      return [\"right\", \"down\"]\n    } else if (emptyIdx === DIMENSION - 1) {\n      return [\"left\", \"down\"]\n    } else if (emptyIdx === DIMENSION * (DIMENSION - 1)) {\n      return [\"up\", \"right\"]\n    } else if (emptyIdx === (DIMENSION * DIMENSION) - 1){\n      return [\"left\", \"up\"]\n    }\n  }\n\n  var isOnSide = function(emptyIdx) {\n    if (emptyIdx % DIMENSION === 0) {\n      return [\"up\", \"right\", \"down\"]\n    } else if (emptyIdx % DIMENSION  === DIMENSION - 1) {\n      return [\"up\", \"left\", \"down\"]\n    } else if (emptyIdx >= 0 && emptyIdx < DIMENSION) {\n      return [\"left\", \"down\", \"right\"]\n    } else if (emptyIdx >= (DIMENSION * (DIMENSION - 1)) && emptyIdx < (DIMENSION * DIMENSION)){\n      return [\"left\", \"up\", \"right\"]\n    }\n  }\n\n  while (movesFromWinning > 0) {\n    makeOneMove();\n    movesFromWinning--;\n  }\n  return boardState;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/root.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}